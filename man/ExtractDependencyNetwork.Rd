% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExtractDependencyNetwork.R
\name{ExtractDependencyNetwork}
\alias{ExtractDependencyNetwork}
\title{Extract the Dependency Network from a Package}
\usage{
ExtractDependencyNetwork(pkgName, which = "Imports", installed = TRUE,
  ignorePackages = NULL)
}
\arguments{
\item{pkgName}{(character) The name of the package from which to extract the network structure.}

\item{which}{a character vector passed on to \link[tools]{package_dependencies} indicating what to count
as a package dependency. Default is "Imports"}

\item{installed}{a boolean whether to consider installed packages or CRAN packages. default is TRUE
FALSE is useful if you would like to vett a package before adding it as a dependency}

\item{ignorePackages}{a vector of package names to ignore in dependency analysis. They will show up if a package depends on them
but their dependencies will be ignored. Useful if you know certain packages are required and have 
and have a large number of dependencies that clutter the analysis.}
}
\value{
A data.table of edges from SOURCE package to TARGET package
}
\description{
This function maps a package's reverse dependency
             network, allowing for analysis of a package's imports
}
\examples{
\dontrun{
nw <- ExtractDependencyNetwork("dplyr")
}
}
\author{
P. Boueri
}
